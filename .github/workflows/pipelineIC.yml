name: workflows

on:
  push:
    branches:
      - feat-laboratorio

jobs:        
  SAST:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: Validando existencia de proyecto en SonarCloud
      id: validateProjectOnSonar
      run: |
        set +e
        curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/projects/create' \
          -d 'name=${{ github.event.repository.name }}' \
          -d 'project=${{ github.event.repository.name }}' \
          -d 'organization=curso-devsecops-pipeline' \
          -d 'visibility=public'
        if [ $? -ne 0 ]; then
          echo "Proyecto ya existe en Sonarcloud"
          echo "proyectoExiste=1" >> $GITHUB_ENV
        else
          echo "Proyecto ${{ github.event.repository.name }} creado exitosamente en Sonarcloud"
          
          echo "Se establece rama main como rama por defecto"
          curl -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/project_branches/rename' \
            -d 'name=feat-laboratorio' \
            -d 'project=${{ github.event.repository.name }}'
        fi
        set -e

    - name: Install SonarCloud Scanner locally
      run: npm install sonar-scanner --save-dev

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./node_modules/.bin/sonar-scanner \
        -Dsonar.projectKey=${{ github.event.repository.name }} \
        -Dsonar.organization=curso-devsecops-pipeline \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
        -Dsonar.branch.name=feat-laboratorio

  #--------------------- SCA -------------------------------------------
  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      #- name: Set up JDK 17
      #  uses: actions/setup-java@v2
      #  with:
      #    java-version: '17'
      #    distribution: 'adopt'

      #- name: Install Node.js
      # uses: actions/setup-node@v2
      #  with:
      #    node-version: '16' # Ajusta la versión de Node.js según sea necesario
      #    cache: 'npm'  

      - name: Install dependencies
        run: npm install

     # - name: Ensure permissions on yarn.lock
      #  run: chmod 644 yarn.lock

      - name: Build
        run: |
          npm run build
      
      - name: Run npm audit fix
        run: npm audit fix

      - name: Run npm audit
        run: npm audit --audit-level=hight
        env:
          CI: true

      - name: Install OWASP Dependency-Check
        run: |
          curl -LJO https://github.com/jeremylong/DependencyCheck/releases/download/v6.5.3/dependency-check-6.5.3-release.zip
          unzip dependency-check-6.5.3-release.zip -d dependency-check

      - name: Debug - List files in reports directory
        run: ls -la ${{ github.workspace }}/
         
      - name: Run OWASP Dependency-Check
        run: |
          dependency-check --project "Laboratorio-final" --out "${{ github.workspace }}/reports" --scan .
      
      - name: Upload npm audit report
        uses: actions/upload-artifact@v2
        with:
          name: npm-audit-report
          path: ${{ github.workspace }}/

      - name: Upload Dependency Check report
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{ github.workspace }}/

      - name: Upload Artifact (built application)
        uses: actions/upload-artifact@master
        with:
          name:  Drop Built App
          path: ${{ github.workspace }}/  # Ajusta la ruta según donde se genere el build de tu aplicación


   
